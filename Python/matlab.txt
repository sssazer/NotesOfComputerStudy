matlab中查看帮助的方式：
	在命令窗中输入 help 关键字
	在右上角窗口中搜索关键字
	matlab帮助文档：http://www.mathworks.com/help/matlab/

Variable区分大小写，开头不可以是数字
关键字：ans：上次的结果，     i，j：复数	 inf：无限大    eps：无限小 2.2204e-0.16    NaN：not a number（比如inf/inf）   pi：Π
iskeyword：查看所有的关键字
不可以用built-in function 和 keyword 当作variable的名字，因为variable的优先级是最高的，会覆盖定义好的函数名
clear 变量名 ：将此变量从workspace中清除，不写变量就是清空workspace
clc：清除屏幕内容

who ：查看当前workspace储存的变量名称
whos ： 查看当前workspace储存的变量信息

format Style：指定下面数据显示的格式
style包括：short	long	shortE	longE	bank：金额类型	hex:十六进制	rat：有理数（分数显示）

分号 ' ; ' ：在一行的末尾，表示不显示这行的运算结果
↑ 和 ↓  ：调出上一行/下一行的命令

取余运算：rem(a,b) == a%b

Array（Vector and Matrix）矩阵和向量：
	行矩阵(Row vector)：A=[1 2 3 4]     中间用空格分隔或用逗号分隔
	列矩阵(Column vector)：B=[1;2;3;4]    中间用分号分隔
	向量(Matrix)：C=[1 2 3;4 5 6;7 8 9]
	矩阵的积：两个矩阵直接用'  * '相乘
	Array Indexing：A(3) = 3      B(4)=4     C(1,1)=1   /    C(1)=1  C(2)=4  竖着数
				          C([1 3 5])=[1 7 5] 即C向量中的第1、3、5个元素组成新的行矩阵
				          C([1 3;1 3])=[1 7;1 7]  一个2*2的向量
				          C([1 3],[2 3]) 表示第1、3行和第2、3列的交集组成的新向量
	通过Indexing找到元素后直接=即可替换该元素，删除元素可以让指定地方等于[]空矩阵，只能一行或一列删除，如果令单个元素为[]原矩阵会变为行矩阵

Colon Operator：A=1:100  生成行矩阵[1 2 3 4……100]     B=1:2:99   生成从1到99的奇数矩阵
	           B=[1:5;6:10;11:15]要保证每行个数相同
	           向量中第三行（三行三列）：A(3,[1,2,3])/A(3,:)

Array Concatenation：增广矩阵   F=[A B]    /  F=[A;B]

Array Manipulation矩阵的运算:A+B     A-B	    A*B==A×B叉乘     A.*B==A·B点乘（对应元素直接乘）   
		              A/B(A乘B的逆矩阵)     A./B（对应元素直接除）  
		               A' A的转置     A^2==A×A       A.^2  A的每个元素分别平方   
特殊的矩阵：eye(n):n阶单位矩阵    zeros(n1,n2):n1×n2的零矩阵      ones(n1,n2):n1×n2的1矩阵
	   diag(a,b,c...):对角矩阵
矩阵的fuction：max(A):矩阵每一列中最大的元素组成的行矩阵     max(max(A)):整个矩阵中最大的元素   min(A)
	sum(A):每一列相加的值组成的行矩阵	mean(A):每一列的平均值
	sort(A):每一列分别从小到大排序		sortrows(A):按照第一列从小到大排序，但移动的是整行
	size(A):返回matrix的行数和列数		length(A):返回vector的长度
	find(A==a):返回a在A中的位置

prod():连乘   参数必须是一个vector，行矩阵和列矩阵都可以   prod(1:n):n的阶乘
科学计数法：1e100 == 1×10^100

Script：程序，左上角新建脚本
	%表示注解 ctrl+r 注解   ctrl+t取消注解
	%% 分节，可以只执行一节
	ctrl+i 智能缩进
	~=  不等于
	所有结构语法都要有结束语end
	可以通过...来让下一行接续上一行
	ctrl+c 结束当前程序

Pre-allocationg:预先设定好一个vector的长度，可以节省时间   A=zeros(2000,2000)

tic   toc:用于计时，tic是开始计时，toc是结束计时

edit(which('函数名.m'))   可以查看函数代码
Function：函数     function x = 函数名(参数1，参数2……)   x是结果
	如果有多个结果，要用中括号括起来
	函数名和程序文件名相同
	如果函数参数可以是几个矩阵的话（同时输入几组数），所有的乘除次方都要换成点乘除次方
默认参数：nargin可以查看输入的参数个数，在函数体中  switch nargin   根据不同的输入个数指定不同参数的默认值
Function Handles：将一个变量指向一个式子，变量名会存储到workspace中
		f=@(x)   x^2   调用时即  f(x)

字符和字符串类型数据String：两个字符串的组合与矩阵类似   s3=[s1 s2]
		字符串的索引从1开始
		s1 == 'a'  返回一个和s1维度相同的matrix，如果那个位置是a就是1，不是a就是0
		比较两个字符串是否相同用strcmp

Structure：直接结构名.变量名=      就会自动生成一个Structure
常用函数：fieldnames(结构体名)  返回该结构体中每个变量名	refield(结构名，'变量名')从结构体中移除指定变量

Cell：用{}定义  方式一：A(1,1)={'hello'}      方式二：A{1,1}='hello '
         读取数据：A(1,1) 返回数据类型     A{1,1}返回具体数值

cat():Array cancatenation   C=cat(flag,A,B)可以将A、B两个数组按照不同方式接起来，可以前后接提升维度

reshape(A,r2,c2):改变形状  将A从r1×c1改变为r2×c2  其中r1×c1=r2×c2

isfunction：判断一个数据是不是某类型的一系列函数
	isinteger   islogical   isnan   isnumeric   isprime  isreal   iscell   ischar
	isempty    isequal   isfloat   isglobal   ishandle   isinf

File Access（数据存储）：File to workspace
储存数据：save(文件名.mat,变量名,-ascii)    会将workspace中的指定变量储存到目标文件中，不写变量名会储存所有变量   
	后面加-ascii可以用记事本打开，导入到matlab时也需要加ascii
加载数据：load('文件名.mat','变量名','-ascii')

Excel中数据的存取：
读取：[data,title]=xlsread('文件名.xlsx','指定的范围')    指定的范围比如 B2:D4   返回值第一个位置是数据类型的，第二个位置是其他类型的
写入：xlswrite('文件名.xlsx',要写入的数据,num,'范围')  num是第几个sheet

普通文件的存取：fid=fopen('[filename]','[permission]')   permission是操作权限
	          fprintf(fid,format,x,y)     format是将要写入的x和y的格式
	          fclose(fid)
读取：fscanf(fid,format,size)
feof(fid):判断文件是否是末尾


	
画图：
plot()函数：plot(x,y):按照一组给定的x，y画图      plot(y):x默认长度是1

hold on/off:matlab在画下一个图是会默认将上一个图清除，在前面加一句hold on就可以保留上一张图
plot style：plot(x,y,'str')    str中就是plot style 可以同时放多个 可以搜索LineSpec(线条设定)
	 可以在一个plot函数中同时画多个函数plot(x,y,'style',x,g,'style',x,h,'style'......)
legend('图像名1'，'图像名2'......):在图中表明每个图像的名称
title() : 给整个图像命名
?label() : 给坐标轴命名 ，‘ ？’可以是x，y，z
text(x,y,str)：在图像（x，y）的位置显示str文字
?lim([a,b])：令轴的坐标范围是[a,b]‘ ？’可以是x，y，z

LaTex：用于在图像中显示特殊符号    

其他图像格式：其他属性可以直接在图形面板修改，不用输入代码

一个图像事实上是由许多物件（object）组成的，比如figure是整个画布   Line是画的图像    Axes是坐标轴，不同object之间也会有继承关系（ancestor、child）
物件的辨识码：可以通过辨识码找到物体并读取或修改他的属性
	h=plot()，可以在创建的时候将图形辨识码赋给某个变量
	默认的辨识码：gca：坐标轴(a:axes)   gcf：当前画布(f:figure)   allchild：查看当前object的所有子物件  ancestor：查看祖先
修改或取回属性：get(h)取回辨识码为h的图像的所有属性，h对应的plot只能画一个图像
	          set(gca,'属性名'，属性值)  重新设置属性	
设置成字符：set(gca,'FontName','symbol')；
	   set(gca,'xTickLabel',{'0','p/2','p','3p/2','2p'})

marker（坐标点）属性：face color 填充颜色     edge color  描边颜色

Figure：
新建figure：将不同的图画在不同的画布上  figure,plot(x,y)  指定figure大小：figure('Position',[left,bottom,width,height])
	   gca和gcf只能指定到current figure
在一个figure中分许多小figure：subplot(m,n,x);plot(x,y)   将一个figure分成mxn块，当前图案在第x块（横着数）

axis模式：直接放在plot(x,y);之后     axis normal     axis equal x轴y轴每格的长度相等      axis square  x轴y轴总长度相同（正方形） axis equal tight  x轴y轴的边框要和图案相切   
	axis on/off 打开/关闭坐标轴显示     box on/off 显示边框    grid on/off   格线打开/关闭

保存图片：saveas(gcf,'<filename>','<formattype>')             高解析度可以用print

对数刻度画图：semilogx(x,y)  x轴用对数刻度画图
	       semilogy(x,y)  y轴用对数刻度画图
	       loglog(x,y)   x,y轴都用对数刻度画图
	set(gca,'XGrid','on') 为对数刻度加网格

一个图两个y轴：plotyy(x,y1,x,y2)

Histogram(直方图)：histogram(x,bin)    bin是将整个x轴分为等宽的几格，每个矩形的高度就代表x矩阵中该值出现的次数
Bar Chart(条形图)：bar(x)   x是要展示的矩阵，多维的话每一行是一组      bar3(x) 三维的条形图   barh(x)将条形图翻转九十度
直方图用于呈现变量的分布，而条形图用于比较变量
Pie Charts(饼图)：pie(a,[0,0,0,1])    后面的矩阵饼图哪一块要分开，1代表这一块与其他的分开    pie3(a)三维饼图
Stairs Charts(阶梯图，也叫占位图)：stairs(x,y)
Stem Charts(棉棒图)：stem(x,y)


Polar Chart(极坐标画图)：polar(theta,r)

fill():只能用于封闭的函数图像，填充   fill(x,y,'style') 

randn(m,n)：按照正态分布生成随机数，组成一个mxn的矩阵

imagesc(z):将z坐标按照颜色显示		colorbar; 加一个z轴坐标于颜色的对应轴
colormap(Name):设置一组颜色，Name是matlab中定义好的颜色名称

3D绘图：
plot3(x,y,z):画线
meshgrid(x,y)：操作网格，创建二维网格坐标，在绘制三维图形前一般都要[X,Y]=meshgrid(x,y)
surf(X，Y，Z)：绘制三维图形的表面，网格中间填充
mesh(X，Y，Z):网格中间不填充
contour（X，Y，Z）：画等高线   clabel():在每条等高线上标注数值     contourf():在每层上填充颜色
meshc()和surfc():在mesh和surf下面画contour
view（）：换视角看一个3d图形
light（）：在不同角度打光





	